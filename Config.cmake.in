@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

@CONFIG_DEPS@

set(_supported_components @CONFIG_COMPONENTS@)

if(NOT @PROJECT_NAME@_FIND_COMPONENTS)
    set(@PROJECT_NAME@_FIND_COMPONENTS ${_supported_components})
endif()

# CMake autogenerated code does not correctly order intra-package dependencies,
# and like everything else in CMake it is unclear how this is supposed to
# actually work, so invert the way the docs say to manage component installs and
# iterate over the list of _supported_components and check it against the
# find_components list so the order is well-defined
list(LENGTH @PROJECT_NAME@_FIND_COMPONENTS _n_required_components)
foreach(_comp IN LISTS _supported_components)
    if(_comp IN_LIST @PROJECT_NAME@_FIND_COMPONENTS)
        math(EXPR _n_required_components "${_n_required_components} - 1")
        include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@${_comp}Targets.cmake")
    endif()
endforeach()

if(NOT _n_required_components EQUAL 0)
    set(@PROJECT_NAME@_FOUND FALSE)
    set(_unsupported_components)
    foreach(_comp IN LISTS @PROJECT_NAME@_FIND_COMPONENTS)
        if(NOT _comp IN_LIST _supported_components)
            list(APPEND _unsupported_components ${_comp})
        endif()
    endforeach()
    set(@PROJECT_NAME@_NOT_FOUND_MESSAGE "Unsupported components: ${_unsupported_components}")
endif()

unset(_comp)
unset(_unsupported_components)
unset(_supported_components)
unset(_n_required_components)
